{
  "name": "modules",
  "description": "Repository of modules written by the CFEngine team.",
  "type": "modules",
  "provides": {
    "autorun": {
      "description": "Enable autorun functionality.",
      "subdirectory": "management/autorun",
      "steps": ["json def.json def.json"]
    },
    "client-initiated-reporting": {
      "description": "Enable client initiated reporting and disable pull collection.",
      "subdirectory": "reporting/client-initiated-reporting",
      "steps": ["json def.json def.json"]
    },
    "demo": {
      "description": "Enables convenient and insecure settings for demoing CFEngine.",
      "subdirectory": "management/demo",
      "dependencies": ["autorun", "every-minute"],
      "steps": ["json def.json def.json"]
    },
    "enable-aslr": {
      "description": "Ensure that Address space layout randomization (ASLR) is enabled on the system.",
      "subdirectory": "security/enable-aslr",
      "steps": [
        "copy enable-aslr.cf services/cfbs/modules/enable-aslr/enable-aslr.cf",
        "bundles enable_aslr",
        "policy_files services/cfbs/modules/enable-aslr/enable-aslr.cf"
      ]
    },
    "every-minute": {
      "description": "Make policy fetching, evaluation, and reporting happen every minute.",
      "subdirectory": "management/every-minute",
      "steps": ["json def.json def.json"]
    },
    "library-for-promise-types-in-bash": {
      "description": "Library enabling promise types implemented in bash.",
      "subdirectory": "libraries/bash",
      "steps": ["copy cfengine.sh modules/promises/"]
    },
    "library-for-promise-types-in-python": {
      "description": "Library enabling promise types implemented in python.",
      "subdirectory": "libraries/python",
      "steps": ["copy cfengine.py modules/promises/"]
    },
    "promise-type-ansible": {
      "description": "Promise type to manage systemd services.",
      "dependencies": ["library-for-promise-types-in-python"],
      "subdirectory": "promise-types/ansible",
      "steps": [
        "copy ansible_promise.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "promise-type-git": {
      "description": "Promise type to manage git repos.",
      "dependencies": ["library-for-promise-types-in-python"],
      "subdirectory": "promise-types/git",
      "steps": [
        "copy git.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "promise-type-groups": {
      "description": "Experimental promise type to manage local user groups.",
      "dependencies": ["library-for-promise-types-in-python"],
      "subdirectory": "promise-types/groups",
      "steps": [
        "copy groups.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "promise-type-systemd": {
      "description": "Promise type to manage systemd services.",
      "dependencies": ["library-for-promise-types-in-python"],
      "subdirectory": "promise-types/systemd",
      "steps": [
        "copy systemd.py modules/promises/",
        "append enable.cf services/init.cf"
      ]
    },
    "uninstall-rsh-server": {
      "description": "Ensure the remote shell (rsh) server package is not installed on the system.",
      "subdirectory": "security/uninstall-rsh-server",
      "steps": [
        "copy uninstall-rsh-server.cf services/cfbs/modules/uninstall-rsh-server/uninstall-rsh-server.cf",
        "bundles uninstall_rsh_server",
        "policy_files services/cfbs/modules/uninstall-rsh-server/uninstall-rsh-server.cf"
      ]
    },
    "inventory-unshadowed-users": {
      "description": "Adds reporting data (inventory) on local users in /etc/passwd not using /etc/shadow for their password.",
      "dependencies": ["library-parsed-local-users"],
      "subdirectory": "security/inventory-unshadowed-users",
      "steps": [
        "copy policy/main.cf services/cfbs/inventory-unshadowed-users/",
        "policy_files services/cfbs/inventory-unshadowed-users/",
        "bundles inventory_unshadowed_users:main"
      ]
    },
    "delete-home-dotshosts": {
      "description": "Ensure that ~/.shosts files are not present, as they present a security risk.",
      "subdirectory": "security/delete-home-dotshots",
      "steps": [
        "copy policy/main.cf services/cfbs/delete-home-dotshots/",
        "policy_files services/cfbs/delete-home-dotshots/",
        "bundles delete_home_dotshosts:main"
      ]
    }
  }
}
